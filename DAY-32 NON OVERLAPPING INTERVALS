//TIME COMPLEXITY:O(N)
//SPACE COMPLEXITY:-O(N)
https://leetcode.com/problems/non-overlapping-intervals/description/?envType=study-plan&id=data-structure-ii
Given an array of intervals intervals where intervals[i] = [starti, endi], return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.

 



bool comp(vector<int> &a,vector<int> &b) {
	return a[1]<b[1];
}
class Solution {
public:


int eraseOverlapIntervals(vector<vector<int>>& intervals) {
int count=-1;
sort(intervals.begin(),intervals.end(),comp);
vector<vector<int>>ans;
int i=0;
ans.push_back(intervals[0]);
int j=0;

        while(j<intervals.size()){
            if(intervals[i][1]>intervals[j][0]){

                count++;
                j++;
            }
            else{
              i=j;
              j++;
            }

        }
        return count;
    }
};
